<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0915.2101                               -->
<workbook original-version='10.3' source-build='10.3.3 (10300.17.0915.2101)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Search Box' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lberon&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Player_Boxscores (Player_Boxscores)' inline='true' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nbabox' name='excel-direct.0eoqqi80k7uyr212i2cvr1sy4s1m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sonia/Documents/NBA/nba/nbabox.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0eoqqi80k7uyr212i2cvr1sy4s1m' name='nbabox' table='[nbabox$]' type='table'>
          <columns gridOrigin='A1:BK10001:no:A1:BK10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='vs_team_id' ordinal='1' />
            <column datatype='integer' name='Team_id' ordinal='2' />
            <column datatype='integer' name='Game_id' ordinal='3' />
            <column datatype='integer' name='Season' ordinal='4' />
            <column datatype='string' name='Season_Type' ordinal='5' />
            <column datatype='integer' name='Game_No' ordinal='6' />
            <column datatype='integer' name='Playoff_Rd' ordinal='7' />
            <column datatype='integer' name='Playoff_Rd_Game_No' ordinal='8' />
            <column datatype='date' name='Date' ordinal='9' />
            <column datatype='integer' name='Person_id' ordinal='10' />
            <column datatype='string' name='Player_Name' ordinal='11' />
            <column datatype='string' name='Abbreviation' ordinal='12' />
            <column datatype='string' name='Location' ordinal='13' />
            <column datatype='string' name='Outcome' ordinal='14' />
            <column datatype='integer' name='Min_Played' ordinal='15' />
            <column datatype='integer' name='Sec_Played' ordinal='16' />
            <column datatype='integer' name='Points' ordinal='17' />
            <column datatype='integer' name='Rebounds' ordinal='18' />
            <column datatype='integer' name='Assists' ordinal='19' />
            <column datatype='integer' name='Steals' ordinal='20' />
            <column datatype='integer' name='Turnovers' ordinal='21' />
            <column datatype='integer' name='Blocked_Shots' ordinal='22' />
            <column datatype='integer' name='Personal_Fouls' ordinal='23' />
            <column datatype='integer' name='Field_Goals' ordinal='24' />
            <column datatype='integer' name='Field_Goals_Attempted' ordinal='25' />
            <column datatype='integer' name='Three_Pointers' ordinal='26' />
            <column datatype='integer' name='Three_Pointers_Attempted' ordinal='27' />
            <column datatype='integer' name='Free_Throws' ordinal='28' />
            <column datatype='integer' name='Free_Throws_Attempted' ordinal='29' />
            <column datatype='integer' name='Offensive_Rebounds' ordinal='30' />
            <column datatype='integer' name='Defensive_Rebounds' ordinal='31' />
            <column datatype='integer' name='Technical_Fouls' ordinal='32' />
            <column datatype='integer' name='Flagrant_Fouls' ordinal='33' />
            <column datatype='integer' name='Ejections' ordinal='34' />
            <column datatype='integer' name='Points_In_Paint' ordinal='35' />
            <column datatype='integer' name='Fast_Break_Points' ordinal='36' />
            <column datatype='integer' name='Triple_Doubles' ordinal='37' />
            <column datatype='integer' name='Double_Doubles' ordinal='38' />
            <column datatype='integer' name='Plus_Minus' ordinal='39' />
            <column datatype='integer' name='Blocks_Against' ordinal='40' />
            <column datatype='integer' name='Pts_Off_TOs' ordinal='41' />
            <column datatype='integer' name='Second_Chance_PTS' ordinal='42' />
            <column datatype='integer' name='GmPTS' ordinal='43' />
            <column datatype='integer' name='GmFGM' ordinal='44' />
            <column datatype='integer' name='GmFTM' ordinal='45' />
            <column datatype='integer' name='GmFTA' ordinal='46' />
            <column datatype='integer' name='GmFGA' ordinal='47' />
            <column datatype='integer' name='GmDREB' ordinal='48' />
            <column datatype='integer' name='GmOREB' ordinal='49' />
            <column datatype='integer' name='GmAST' ordinal='50' />
            <column datatype='integer' name='GmSTL' ordinal='51' />
            <column datatype='integer' name='GmBLK' ordinal='52' />
            <column datatype='integer' name='GmPF' ordinal='53' />
            <column datatype='integer' name='GmTO' ordinal='54' />
            <column datatype='real' name='PIE' ordinal='55' />
            <column datatype='boolean' name='top10' ordinal='56' />
            <column datatype='string' name='Conference.x' ordinal='57' />
            <column datatype='string' name='Home_City' ordinal='58' />
            <column datatype='string' name='Home_Team' ordinal='59' />
            <column datatype='string' name='Conference.y' ordinal='60' />
            <column datatype='string' name='Away_City' ordinal='61' />
            <column datatype='string' name='Away_Team' ordinal='62' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vs_team_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vs_team_id]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>vs_team_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Team_id]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Team_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Game_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Game_id]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Game_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season_Type]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Season_Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Game_No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Game_No]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Game_No</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Playoff_Rd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Playoff_Rd]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Playoff_Rd</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Playoff_Rd_Game_No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Playoff_Rd_Game_No]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Playoff_Rd_Game_No</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Person_id]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Person_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Player_Name]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Player_Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abbreviation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Abbreviation]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Abbreviation</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Outcome</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Outcome]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Outcome</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min_Played</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Min_Played]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Min_Played</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sec_Played</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sec_Played]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Sec_Played</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Points]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Points</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rebounds]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Rebounds</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Assists</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Assists]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Assists</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Steals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Steals]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Steals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Turnovers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Turnovers]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Turnovers</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Blocked_Shots</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Blocked_Shots]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Blocked_Shots</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal_Fouls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal_Fouls]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Personal_Fouls</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Field_Goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Field_Goals]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Field_Goals</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Field_Goals_Attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Field_Goals_Attempted]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Field_Goals_Attempted</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Three_Pointers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Three_Pointers]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Three_Pointers</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Three_Pointers_Attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Three_Pointers_Attempted]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Three_Pointers_Attempted</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Free_Throws</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Free_Throws]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Free_Throws</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Free_Throws_Attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Free_Throws_Attempted]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Free_Throws_Attempted</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offensive_Rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offensive_Rebounds]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Offensive_Rebounds</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defensive_Rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defensive_Rebounds]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Defensive_Rebounds</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Technical_Fouls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Technical_Fouls]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Technical_Fouls</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flagrant_Fouls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flagrant_Fouls]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Flagrant_Fouls</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ejections</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ejections]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Ejections</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Points_In_Paint</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Points_In_Paint]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Points_In_Paint</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fast_Break_Points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fast_Break_Points]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Fast_Break_Points</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Triple_Doubles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Triple_Doubles]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Triple_Doubles</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Double_Doubles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Double_Doubles]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Double_Doubles</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plus_Minus</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Plus_Minus]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Plus_Minus</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Blocks_Against</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Blocks_Against]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Blocks_Against</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pts_Off_TOs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pts_Off_TOs]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Pts_Off_TOs</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second_Chance_PTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Second_Chance_PTS]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Second_Chance_PTS</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmPTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmPTS]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmPTS</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmFGM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmFGM]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmFGM</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmFTM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmFTM]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmFTM</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmFTA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmFTA]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmFTA</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmFGA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmFGA]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmFGA</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmDREB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmDREB]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmDREB</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmOREB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmOREB]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmOREB</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmAST</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmAST]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmAST</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmSTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmSTL]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmSTL</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmBLK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmBLK]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmBLK</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmPF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmPF]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmPF</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GmTO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GmTO]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>GmTO</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PIE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PIE]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>PIE</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>top10</remote-name>
            <remote-type>11</remote-type>
            <local-name>[top10]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>top10</remote-alias>
            <ordinal>56</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conference.x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Conference.x]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Conference.x</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Home_City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Home_City]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Home_City</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Home_Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Home_Team]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Home_Team</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conference.y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Conference.y]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Conference.y</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Away_City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Away_City]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Away_City</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Away_Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Away_Team]</local-name>
            <parent-name>[nbabox]</parent-name>
            <remote-alias>Away_Team</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nbabox]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BK10001:no:A1:BK10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Abbreviation]' role='dimension' type='nominal' />
      <column caption='Away City' datatype='string' name='[Away_City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Away Team' datatype='string' name='[Away_Team]' role='dimension' type='nominal' />
      <column caption='Blocked Shots' datatype='integer' name='[Blocked_Shots]' role='measure' type='quantitative' />
      <column caption='Blocks Against' datatype='integer' name='[Blocks_Against]' role='measure' type='quantitative' />
      <column caption='SB' datatype='boolean' name='[Calculation_1568941573413318657]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(([Player_Name]),[Parameters].[Parameter 1])' />
      </column>
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Defensive Rebounds' datatype='integer' name='[Defensive_Rebounds]' role='measure' type='quantitative' />
      <column caption='Double Doubles' datatype='integer' name='[Double_Doubles]' role='measure' type='quantitative' />
      <column caption='Fast Break Points' datatype='integer' name='[Fast_Break_Points]' role='measure' type='quantitative' />
      <column caption='Field Goals' datatype='integer' name='[Field_Goals]' role='measure' type='quantitative' />
      <column caption='Field Goals Attempted' datatype='integer' name='[Field_Goals_Attempted]' role='measure' type='quantitative' />
      <column caption='Flagrant Fouls' datatype='integer' name='[Flagrant_Fouls]' role='measure' type='quantitative' />
      <column caption='Free Throws' datatype='integer' name='[Free_Throws]' role='measure' type='quantitative' />
      <column caption='Free Throws Attempted' datatype='integer' name='[Free_Throws_Attempted]' role='measure' type='quantitative' />
      <column caption='Game No' datatype='integer' name='[Game_No]' role='measure' type='quantitative' />
      <column caption='Game id' datatype='integer' name='[Game_id]' role='dimension' type='ordinal' />
      <column caption='Gm AST' datatype='integer' name='[GmAST]' role='measure' type='quantitative' />
      <column caption='Gm BLK' datatype='integer' name='[GmBLK]' role='measure' type='quantitative' />
      <column caption='Gm DREB' datatype='integer' name='[GmDREB]' role='measure' type='quantitative' />
      <column caption='Gm FGA' datatype='integer' name='[GmFGA]' role='measure' type='quantitative' />
      <column caption='Gm FGM' datatype='integer' name='[GmFGM]' role='measure' type='quantitative' />
      <column caption='Gm FTA' datatype='integer' name='[GmFTA]' role='measure' type='quantitative' />
      <column caption='Gm FTM' datatype='integer' name='[GmFTM]' role='measure' type='quantitative' />
      <column caption='Gm OREB' datatype='integer' name='[GmOREB]' role='measure' type='quantitative' />
      <column caption='Gm PF' datatype='integer' name='[GmPF]' role='measure' type='quantitative' />
      <column caption='Gm PTS' datatype='integer' name='[GmPTS]' role='measure' type='quantitative' />
      <column caption='Gm STL' datatype='integer' name='[GmSTL]' role='measure' type='quantitative' />
      <column caption='Gm TO' datatype='integer' name='[GmTO]' role='measure' type='quantitative' />
      <column caption='Home City' datatype='string' name='[Home_City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Home Team' datatype='string' name='[Home_Team]' role='dimension' type='nominal' />
      <column caption='Min Played' datatype='integer' name='[Min_Played]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Offensive Rebounds' datatype='integer' name='[Offensive_Rebounds]' role='measure' type='quantitative' />
      <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
      <column caption='Personal Fouls' datatype='integer' name='[Personal_Fouls]' role='measure' type='quantitative' />
      <column caption='Player Name' datatype='string' name='[Player_Name]' role='dimension' type='nominal' />
      <column caption='Playoff Rd' datatype='integer' name='[Playoff_Rd]' role='measure' type='quantitative' />
      <column caption='Playoff Rd Game No' datatype='integer' name='[Playoff_Rd_Game_No]' role='measure' type='quantitative' />
      <column caption='Plus Minus' datatype='integer' name='[Plus_Minus]' role='measure' type='quantitative' />
      <column caption='Points In Paint' datatype='integer' name='[Points_In_Paint]' role='measure' type='quantitative' />
      <column caption='Pts Off TOs' datatype='integer' name='[Pts_Off_TOs]' role='measure' type='quantitative' />
      <column caption='Season Type' datatype='string' name='[Season_Type]' role='dimension' type='nominal' />
      <column caption='Sec Played' datatype='integer' name='[Sec_Played]' role='measure' type='quantitative' />
      <column caption='Second Chance PTS' datatype='integer' name='[Second_Chance_PTS]' role='measure' type='quantitative' />
      <column caption='Team id' datatype='integer' name='[Team_id]' role='dimension' type='ordinal' />
      <column caption='Technical Fouls' datatype='integer' name='[Technical_Fouls]' role='measure' type='quantitative' />
      <column caption='Three Pointers' datatype='integer' name='[Three_Pointers]' role='measure' type='quantitative' />
      <column caption='Three Pointers Attempted' datatype='integer' name='[Three_Pointers_Attempted]' role='measure' type='quantitative' />
      <column caption='Triple Doubles' datatype='integer' name='[Triple_Doubles]' role='measure' type='quantitative' />
      <column caption='Top10' datatype='boolean' name='[top10]' role='dimension' type='nominal' />
      <column caption='Top30' datatype='boolean' name='[top30]' role='dimension' type='nominal' />
      <column caption='Vs Team Id' datatype='integer' name='[vs_team_id]' role='dimension' type='ordinal' />
      <column-instance column='[Abbreviation]' derivation='None' name='[none:Abbreviation:nk]' pivot='key' type='nominal' />
      <column-instance column='[Game_No]' derivation='None' name='[none:Game_No:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Player_Name]' derivation='None' name='[none:Player_Name:nk]' pivot='key' type='nominal' />
      <group caption='Action (Date,Person id)' hidden='true' name='[Action (Date,Person id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Person_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Date1,Person id)' hidden='true' name='[Action (Date1,Person id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Person_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Person id)' hidden='true' name='[Action (Person id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Person_id]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.158406' measure-ordering='alphabetic' measure-percentage='0.7862' parameter-percentage='0.0553936' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0s7f6z010zy1c7157ueac1nfxvlq].[cnt:Blocked_Shots:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0s7f6z010zy1c7157ueac1nfxvlq].[sum:Blocked_Shots:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s7f6z010zy1c7157ueac1nfxvlq].[cnt:Blocks_Against:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s7f6z010zy1c7157ueac1nfxvlq].[sum:Blocks_Against:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Player_Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anthony Bennett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brandan Wright&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charlie Villanueva&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwight Buycks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant Jerrett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack Cooley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jason Richardson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jonas Valanciunas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kendall Marshall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lucas Nogueira&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nate Robinson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Otto Porter Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Randy Foye&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shawne Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Duncan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Hansbrough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameron Bairstow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CJ Wilcox&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrell Arthur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elton Brand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jerel McNeal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kirk Hinrich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lavoy Allen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nikola Pekovic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phil Pressey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tarik Black&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Travis Wear&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrei Kirilenko&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caron Butler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cole Aldrich&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David Wear&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jared Sullinger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerome Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Redd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mirza Teletovic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;O.J. Mayo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quincy Miller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rodney Stuckey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shannon Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Will Cherry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alexis Ajinca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Archie Goodwin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chris Copeland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Damjan Rudez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deron Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gal Mekel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greivis Vasquez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan Hamilton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TJ Warren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrus Thomas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Kirk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brandon Bass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chase Budinger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Festus Ezeli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JJ Hickson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kendrick Perkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luis Scola&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matt Barnes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nate Wolters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pablo Prigioni&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rasual Butler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shayne Whittington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zach Randolph&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Jefferson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bojan Bogdanovic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cartier Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erick Green&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Goran Dragic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jarnell Stokes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jerrelle Benimon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johnny O&apos;Bryant III&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kostas Papanikolaou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lou Amundson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marreese Speights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch McGary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ognjen Kuzmic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ronnie Price&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Dawkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryce Cotton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elijah Millsap&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hollis Thompson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Michael McAdoo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeffery Taylor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joey Dorsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JR Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kevin Seraphin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Larry Drew II&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mike Dunleavy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pero Antic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tony Wroten&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andre Miller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beno Udrih&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carl Landry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cleanthony Early&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Donald Sloan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gigi Datome&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jannero Pargo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Evans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justin Hamilton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KJ McDaniels&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leandro Barbosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcus Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nikola Vucevic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PJ Hairston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Sacre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shabazz Muhammad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tayshaun Prince&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austin Daye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emeka Okafor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry Sims&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joel Anthony&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Josh McRoberts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Landry Fields&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richard Jefferson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sean Kilpatrick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steve Blake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victor Claver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew Nicholson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boris Diaw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cory Jefferson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drew Gooden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ersan Ilyasova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jabari Brown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jarrett Jack&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kris Humphries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martell Webster&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mo Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Omer Asik&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ronny Turiaf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shavlik Randolph&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ty Lawson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arinze Onuaku&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brandon Rush&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chris Douglas-Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Earl Barron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jameer Nelson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jeff Adrien&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenyon Martin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malcolm Lee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nick Calathes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reggie Evans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryan Hollins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alonzo Gee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brendan Haywood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Danny Granger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Earl Clark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;James Ennis III&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jeff Ayres&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jorge Gutierrez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malcolm Thomas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nick Collison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ryan Kelly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spencer Hawes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toney Douglas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anderson Varejao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chuck Hayes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Devyn Marble&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry Walker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Jones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Withey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joel Freeland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Josh Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevin Martin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Pierce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Ledo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sebastian Telfair&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steve Novak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Gordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C.J. Watson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CJ Miles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darius Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elliot Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gerald Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Young&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joffrey Lauvergne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Larry Sanders&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marcus Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mike Miller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nikola Mirotic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry Jones III&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robbie Hummel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sergey Karasev&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toure&apos; Murry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Morrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brandon Davies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Andersen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dahntay Jones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Francisco Garcia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jason Terry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JJ Redick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luke Babbitt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matt Bonner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nazr Mohammed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ray McCallum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russ Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alan Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeJuan Blair&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drew Gordon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jason Maxiell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monta Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ramon Sessions&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roy Hibbert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shawn Marion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiago Splitter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Ennis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Xavier Henry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adreian Payne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andre Roberson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bernard James&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carlos Boozer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;David Lee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Donatas Motiejunas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glen Davis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Cunningham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Lucas III&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mario Chalmers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PJ Tucker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trevor Booker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amar&apos;e Stoudemire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arron Afflalo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brian Roberts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chris Kaman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Derrick Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Neal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hedo Turkoglu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jose Calderon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Garnett&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manu Ginobili&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nick Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samuel Dalembert&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tony Allen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vander Blue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alexey Shved&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brandon Jennings&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chris Bosh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dennis Schroder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Furkan Aldemir&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Stiemsma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaal Franklin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan Farmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyle Singler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luke Ridnour&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nene Hilario&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patrick Christopher&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sim Bhullar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timofey Mozgov&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zoran Dragic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AJ Price&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andrea Bargnani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;David Stockton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dorell Wright&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glen Rice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Salmons&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jusuf Nurkic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kobe Bryant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lester Hudson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Markel Brown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miroslav Raduljica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norris Cole&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shane Larkin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Will Bynum&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Game_No:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1085</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1089</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>1088</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>1093</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1091</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1094</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1087</bucket>
            </map>
            <map to='#edc948'>
              <bucket>1090</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1086</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>1092</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Abbreviation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;LAC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MIN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GSW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BKN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SAC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ORL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='alphabetical-order' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search Box' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
      <datasources>
        <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
      </datasources>
      <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
        <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Date:ok]' member='#2007-11-01#' />
          <groupfilter function='member' level='[none:Date:ok]' member='#2013-03-30#' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='ChoosePlayer' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Home Page' type='sheet' />
      <link caption='ChoosePlayer' delimiter=',' escape='\' expression='tsl:Player-Game%20Page?%5Bfederated.0s7f6z010zy1c7157ueac1nfxvlq%5D.%5BPerson_id%5D~s0=&lt;[Person_id]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Player-Game Page' />
      </command>
    </action>
    <datasources>
      <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
    </datasources>
    <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
      <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='DATE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
            <column-instance column='[Person_id]' derivation='Attribute' name='[attr:Person_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Person_id]' derivation='None' name='[none:Person_id:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]'>
            <groupfilter function='level-members' level='[Person_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]'>
            <groupfilter function='level-members' level='[none:Person_id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:qk]' />
              <lod column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:Person_id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontsize='18'>&lt;</run>
                <run fontalignment='0' fontsize='18'>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:qk]</run>
                <run fontalignment='0' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Lebron'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='NAME'>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
            <column caption='Player Name' datatype='string' name='[Player_Name]' role='dimension' type='nominal' />
            <column-instance column='[Person_id]' derivation='Attribute' name='[attr:Person_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Player_Name]' derivation='None' name='[none:Player_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]'>
            <groupfilter function='level-members' level='[Person_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='649' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]' />
              <tooltip column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:Person_id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontsize='18'>&lt;</run>
                <run fontalignment='0' fontsize='18'>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]</run>
                <run fontalignment='0' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Number of Games Played'>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Game No' datatype='integer' name='[Game_No]' role='measure' type='quantitative' />
            <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
            <column-instance column='[Game_No]' derivation='CountD' name='[ctd:Game_No:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Person_id]' derivation='None' name='[none:Person_id:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]'>
            <groupfilter function='level-members' level='[Person_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='144' />
            <format attr='width' value='169' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[ctd:Game_No:qk]' />
              <lod column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='26'>&lt;</run>
                <run bold='true' fontsize='26'>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[ctd:Game_No:qk]</run>
                <run bold='true' fontsize='26'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='OPPOSING TEAM'>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column caption='Away Team' datatype='string' name='[Away_Team]' role='dimension' type='nominal' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
            <column-instance column='[Away_Team]' derivation='None' name='[none:Away_Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Person_id]' derivation='None' name='[none:Person_id:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]'>
            <groupfilter function='level-members' level='[Person_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='193' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Away_Team:nk]' />
              <lod column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='11'>&lt;</run>
                <run fontsize='11'>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Away_Team:nk]</run>
                <run fontsize='11'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Steph'>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TEAM'>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Team' datatype='string' name='[Home_Team]' role='dimension' type='nominal' />
            <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Home_Team]' derivation='None' name='[none:Home_Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Person_id]' derivation='None' name='[none:Person_id:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]'>
            <groupfilter function='level-members' level='[Person_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[Action (Person id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Home_Team:nk]' />
              <lod column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='11'>&lt;</run>
                <run fontsize='11'>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Home_Team:nk]</run>
                <run fontsize='11'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='overall leader'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Leaders for Games on </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>So I just tried adding more detiails about the players instead of just their name. Also I sorted by team id. Ideally we&apos;d sort by game id and then by away/home within gameid, but that would require a little bit more data manipulation in R. Just a little though. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
            <column datatype='string' name='[Abbreviation]' role='dimension' type='nominal' />
            <column caption='Away City' datatype='string' name='[Away_City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='&quot;vs&quot;' datatype='string' name='[Calculation_1568941573551255555]' role='dimension' type='nominal' user:unnamed='overall leader'>
              <calculation class='tableau' formula='&quot;vs&quot;' />
            </column>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home City' datatype='string' name='[Home_City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[PIE]' role='measure' type='quantitative' />
            <column caption='Person id' datatype='integer' name='[Person_id]' role='dimension' type='ordinal' />
            <column caption='Player Name' datatype='string' name='[Player_Name]' role='dimension' type='nominal' />
            <column-instance column='[PIE]' derivation='Attribute' name='[attr:PIE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Abbreviation]' derivation='Max' name='[max:Abbreviation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Abbreviation]' derivation='None' name='[none:Abbreviation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Away_City]' derivation='None' name='[none:Away_City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1568941573551255555]' derivation='None' name='[none:Calculation_1568941573551255555:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Home_City]' derivation='None' name='[none:Home_City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Person_id]' derivation='None' name='[none:Person_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Player_Name]' derivation='None' name='[none:Player_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[PIE]' derivation='Sum' name='[sum:PIE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]' included-values='in-range'>
            <min>0.108</min>
            <max>0.23469387755102</max>
          </filter>
          <filter class='categorical' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Abbreviation:nk]'>
            <groupfilter function='level-members' level='[none:Abbreviation:nk]' />
          </filter>
          <sort class='computed' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]' direction='ASC' using='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[sum:PIE:qk]' />
          <sort class='computed' column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]' direction='ASC' using='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[max:Abbreviation:nk]' />
          <slices>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</column>
            <column>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Abbreviation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]' value='*0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]' value='304' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]' value='*0.00' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]' value='Game Date' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]' />
              <lod column='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk] / ([federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Abbreviation:nk] / ([federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Away_City:nk] / ([federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Calculation_1568941573551255555:nk] / [federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Home_City:nk]))))</rows>
        <cols>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:PIE:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Home Page'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Welcome to the New Box Score.&#10;</run>
            <run fontsize='8'>Please click on a player to learn more about his game.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Player_Boxscores (Player_Boxscores)' name='federated.0s7f6z010zy1c7157ueac1nfxvlq' />
      </datasources>
      <datasource-dependencies datasource='federated.0s7f6z010zy1c7157ueac1nfxvlq'>
        <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='3' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='16625' id='1' type='title' w='100000' x='0' y='0' />
          </zone>
        </zone>
        <zone h='15750' id='9' is-centered='0' is-scaled='1' param='C:/Users/Sonia/Documents/NBA/nba/NBA-logo.png' type='bitmap' w='20900' x='79300' y='83750' />
        <zone h='66875' id='10' name='overall leader' show-title='false' w='65100' x='11800' y='29875' />
        <zone h='8375' id='11' mode='checkdropdown' name='overall leader' param='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]' show-title='false' type='filter' values='all' w='31700' x='56300' y='21750' />
        <zone forceUpdate='true' h='14875' id='12' type='text' w='56200' x='14500' y='17500'>
          <formatted-text>
            <run fontsize='12'>Leaders for Games on</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Player-Game Page'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How did  &#10;play on                          ?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='22250' id='5' type='title' w='100000' x='0' y='0' />
          </zone>
        </zone>
        <zone h='10750' id='7' name='DATE' show-title='false' w='40100' x='22400' y='11375' />
        <zone h='10875' id='8' name='NAME' show-title='false' w='65900' x='24700' y='1000' />
        <zone h='16125' id='9' is-centered='0' is-scaled='1' param='C:/Users/Sonia/Documents/NBA/nba/NBA-logo.png' type='bitmap' w='23000' x='76900' y='82875' />
        <zone h='63625' id='10' param='horz' type='layout-flow' w='49900' x='1600' y='32875' />
        <zone h='55000' id='11' param='horz' type='layout-flow' w='44600' x='53500' y='26500' />
        <zone h='9875' id='12' name='TEAM' show-title='false' w='27300' x='27200' y='23625' />
        <zone h='11625' id='13' name='OPPOSING TEAM' show-title='false' w='26000' x='3100' y='23625' />
        <zone h='6500' id='14' type='text' w='10000' x='20000' y='23500'>
          <formatted-text>
            <run fontsize='11'>vs.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='2.5' source-height='73'>
    <window class='dashboard' maximized='true' name='Home Page'>
      <viewpoints>
        <viewpoint name='overall leader'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Harrison Barnes&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='worksheet' name='overall leader'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Abbreviation:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[md:Date:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Abbreviation:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Away_City:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Away_Team:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Calculation_1568941573413318657:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Calculation_1568941573551255555:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Game_No:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Game_id:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Home_City:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:top10:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:top30:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Player-Game Page'>
      <viewpoints>
        <viewpoint name='DATE' />
        <viewpoint name='NAME' />
        <viewpoint name='OPPOSING TEAM' />
        <viewpoint name='TEAM' />
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='Number of Games Played'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Calculation_1568941573413318657:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DATE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:qk]</field>
                  <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:Person_id:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2017-06-12#</value>
                <value>%many-values%</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Date:qk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NAME'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]</field>
                  <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[attr:Person_id:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Stephen Zimmerman&quot;</value>
                <value>1627757</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Player_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TEAM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Home_Team:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OPPOSING TEAM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Away_Team:nk]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Steph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:Person_id:ok]</field>
            <field>[federated.0s7f6z010zy1c7157ueac1nfxvlq].[none:top30:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Lebron'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='87' name='DATE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Home Page' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Lebron' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAACToAAAk6AGCYwUc
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='NAME' width='192'>
      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
      329ajrlR/n3pGRhRqsRfWzgkLjKEkYP6ar0itezR9L36lOrpY2QoQ6VSkZaenkt5RalU5lKZ
      +xOZTB+l8uN9qPu3kOev6+PtRbPOQ5k6vHuubb/t+Bovr3O0qjW4UDszM7NAkvSSKLmK0qaF
      i9HfxKZECaxKV2ffvm2Y6H/oj9lShk6ew93xo1jz3X6WfDb4478NkUiwdazF6q82U/J9VsnI
      g/I1GzNj5mR6tmvO5FmLKGa+jvbNcpTm7O3tuRYaCrhrNhRqHj95il0T7bI4/yW0nj1qRSJe
      56/TuVsPypcvn+uva5eOXPfxyFJhLjgmJcpR2VbC78e8eDMRTahVpKS86w2GJsXL1cBS/hgv
      39yPzRlpcmLjkwpl19sYmFixaOlS7pzYwRGfO3mucfChkCBBKvQ57nmFtxP0VBkKXscUPBzT
      RsU6LqxaMIkNS2ZzPSAnPGzaoiW3vY4SHKm5uk1EsB/et57j0rRwyn//j2h1gOePbhGuKIFz
      HvIhjk7NKa4I54Z/mNbtee/NiJGjhvHrluWs27aLu/cfcP2SD1/Om86eEwWftyIzKc6no/qx
      bsE0tuzYy+2797h/7zYHd+9g1LDBeN95Wji7tGBdtiaLZ49n26rFPAqPyb/BX0EiYXAvd3Zv
      WMyab3Zw8/ZdHty/xx8H9zBxzDAOeN76i91LqN2iM4s+H8yXs6fx4GmmFmjZWs3p06oKUyZO
      5MgJT/z9H3Di8B4mTZ1H636fUtOh+IcY3b8arffbyFdx9B8yCBM97eGFRGbJ0KH9iY+OAsoh
      NTDC2dUFU33NYEEikdDY2QVz45w4s0GbPqxU6/Pdzr38tns7Nnbl6dlvCPOaNSJGP8fhDMyt
      cW3WMA8VaQmte45EZlqcXb8e4dcdW0Aqo3KNOvQYOY3OzjmLR9hXqEot+bsXgKhSqwEyh9xf
      t51a92Tii2h8zl2i2pBuSCQS6jdzwdbijVeDBma4ujhjnIfYqcysOK7NGvFmpKYnM6K5qwum
      +jlhYB3XbqxfZsKPP+9j+oGfUCGhfOWatOsyjD5ds0IRiZR6jZwpWSz32gQ1nBpjb50julWy
      rCP1NA6ehGbtBzA9TcnJE6eoPHYohvoyxs1ehu2eH9j3/XpevMr8ENZzxDQG92yfS/37v4gu
      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
      ev4fg0ketG2z6AMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='148' name='Number of Games Played' width='173'>
      iVBORw0KGgoAAAANSUhEUgAAAK0AAACUCAYAAADh2qkmAAAACXBIWXMAACToAAAk6AGCYwUc
      AAADHUlEQVR4nO3d4W3bOhiGUaa4SyhrxGMkazhjBFrDGYMeI1pDGcP3V9ACRdN7U1HUW57z
      y4ABix/4QLAJw7673W63AkG+9V4A/F+iJY5oiSNa4oiWOKIljmiJI1riiJY4oiWOaIkjWuKI
      ljiiJY5oiSNa4oiWOKIljmiJI1riiJY4oiWOaIkjWuKIljiiJY5oiSNa4oiWOKIljmiJI1ri
      iJY4oiWOaIkjWuKIljiiJY5oiSNa4oiWOKIljmiJI1ri/NN7Af/Vuq7ler2Wy+Xy03Nvb28d
      VtTOSLN+xeGj/djAWmt5f3/vvZymRpr1Txw22pE2cKRZt3C4aNd1LcuylMvl8tdv4EizbulQ
      0dZah9nAkWbd2iGirbWW6/ValmXpvZRdPD8/DzNrC12jXde1zPM8zAaONm8rXaIdbfNGm7e1
      XaNd17W8vr6WWuuel+1mtHn3sku0nx2W/41Gm3dvzaOttZZ5nltf5jBGm7eH5tF+9Uhnmqby
      9PRUSilRd6yvzJs6ay+H+8LMNE3lfD6XWms5n8+9l9PUSLNu6RDntKV8v9uMsHkjzdpC92hH
      28Bpmpwm/KFu0Y4Y60jztrR7tB+b9/j4WO7v7/e+/O5Gm3cPu0U72uaNNu+emkf78Ql5lM0b
      bd4emkf7cf44itHm7eFw57TwO6IljmiJI1riiJY4oiWOaPnU6XQqp9Pp08d7Ey1xun/Li2P7
      8bfDfvV4b+60xBEtcURLHNESR7TEES1xREsc0RJHtMQRLXFESxzREke0xBEtcURLHNESR7TE
      ES1xREsc0RJHtMQRLXFESxzREke0xLm73W63Fi88z3PE/2W9vLxs8pPzCfNuNWtv7rTEES1x
      REsc0RJHtMQRLXGaHXkty1LWdW3x0pt6eHjY5O9AE+bdatbemkULrXh7QBzREke0xBEtcURL
      HNESR7TEES1xREsc0RJHtMQRLXFESxzREke0xBEtcURLHNESR7TEES1xREsc0RJHtMQRLXFE
      SxzREke0xBEtcURLHNESR7TEES1xREsc0RJHtMQRLXFESxzREke0xBEtcf4FMbEHXj40EV0A
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='56' name='OPPOSING TEAM' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player-Game Page' width='192'>
      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
      pdQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Steph' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAACToAAAk6AGCYwUc
      AAACMklEQVR4nO3WwQkDMRAEQdkY9FL+SSoHOYkT9+iqAIb9NOznnHMGRH3fPgDeJADSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBEDa78bo3nvMOW9Mw6OuBDDnHGutG9PwKC8QaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIg7Q/rTAiViAM7egAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='56' name='TEAM' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='overall leader' width='192'>
      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
      eKPQAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
